name: GitHub Pages Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.91.2'
          extended: true

# Beginning of yarn setup
      - name: use node.js 16.x
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '>=16.0.0'
          check-latest: true
      
      - name: npm install yarn
        run: |
          npm install --global yarn
          yarn --version
      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: v16-node_modules-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            v16-node_modules-
      
      - name: find location of global yarn cache
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "::set-output name=dir::$(yarn cache dir)"
      
      - name: cache global yarn cache
        uses: actions/cache@v2
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-
      - name: yarn install
        run: yarn install --frozen-lockfile
# End of yarn setup

      - name: yarn run gulp deploy
        run: yarn run gulp deploy

      - name: Build
        run: hugo --minify -d ./docs

      - name: Push New Files
        if: ${{ github.ref == 'refs/heads/main' }}
        shell: bash
        working-directory: docs
        run: |
          if [[ $(git status --porcelain docs | wc -l) -gt 0 ]]; then
            git config user.name "Github Actions"
            git config user.email "im5tu@users.noreply.github.com"
            git add $(git ls-files -o --exclude-standard)
            git commit -m "Updated from ref: $GITHUB_SHA [skip ci]"
            git push
          fi
