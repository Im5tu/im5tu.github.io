<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>March on CodeWithStu's Blog</title><link>https://im5tu.io/article/2013/03/</link><description>Recent content in March on CodeWithStu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://im5tu.io/article/2013/03/index.xml" rel="self" type="application/rss+xml"/><item><title>Semaphore vs SeamphoreSlim Micro Benchmark</title><link>https://im5tu.io/article/2013/03/semaphore-vs-seamphoreslim-micro-benchmark/</link><pubDate>Mon, 11 Mar 2013 18:06:28 +0000</pubDate><guid>https://im5tu.io/article/2013/03/semaphore-vs-seamphoreslim-micro-benchmark/</guid><description>In this post, I am going to show a small micro-benchmark to demonstrate the performance difference between the Semaphore and SemaphoreSlim classes in C#. A Semaphore is often used to restrict the number of threads than can access some (physical or logical) resource. In this case, we want the restriction to be as little as possible.</description></item></channel></rss>