<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>February on CodeWithStu's Blog</title><link>https://im5tu.io/article/2023/02/</link><description>Recent content in February on CodeWithStu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://im5tu.io/article/2023/02/index.xml" rel="self" type="application/rss+xml"/><item><title>Observed No. 7 - Well Architected</title><link>https://im5tu.io/article/2023/02/observed-no.-7-well-architected/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/02/observed-no.-7-well-architected/</guid><description>&lt;p>Welcome to the seventh edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at the Well-Architected framework.&lt;/p>
&lt;h2 id="what-is-the-well-architected-framework">What is the Well-Architected Framework?&lt;/h2>
&lt;p>The Well-Architected Framework is a set of best practices and guidelines designed to help businesses build and operate reliable, secure, efficient, and cost-effective systems in the cloud. AWS conceived the framework to help customers evaluate their architecture and adopt best practices to improve their systems&amp;rsquo; performance, security, and scalability.&lt;/p>
&lt;p>The framework has six pillars, each focusing on a specific aspect of running on AWS. These are:&lt;/p>
&lt;ol>
&lt;li>Operational Excellence Pillar&lt;/li>
&lt;li>Security Pillar&lt;/li>
&lt;li>Reliability Pillar&lt;/li>
&lt;li>Performance Efficiency Pillar&lt;/li>
&lt;li>Cost Optimization Pillar&lt;/li>
&lt;li>Sustainability Pillar&lt;/li>
&lt;/ol>
&lt;h2 id="operational-excellence-pillar">Operational Excellence Pillar&lt;/h2>
&lt;p>The operational excellence pillar focuses on improving operating procedures and processes, monitoring systems, and continuously improving the overall operational capabilities of the organization. It provides best practices for managing change, responding to events and defining procedures to ensure consistent, repeatable processes are in place.&lt;/p>
&lt;h2 id="security-pillar">Security Pillar&lt;/h2>
&lt;p>The security pillar provides best practices for identifying and managing security risks, such as implementing strong access controls and enforcing least privilege principles. It also emphasizes the importance of automation of security tasks, continuous monitoring for security threats and maintaining compliance with security standards and regulations.&lt;/p>
&lt;h2 id="reliability-pillar">Reliability Pillar&lt;/h2>
&lt;p>The reliability pillar provides best practices for designing resilient systems, such as using distributed systems and redundancy to ensure high availability and implementing monitoring and alerting to quickly detect and respond to failures. It also emphasizes the importance of testing and validating system resilience to identify and address potential weaknesses before they impact users.&lt;/p>
&lt;h2 id="performance-efficiency-pillar">Performance Efficiency Pillar&lt;/h2>
&lt;p>The performance efficiency pillar provides best practices for selecting suitable instance types and sizes, using automation to scale resources up and down to meet demand, and optimizing application performance by leveraging caching, database performance tuning, and content delivery networks. It also emphasizes the importance of monitoring performance and usage metrics to identify areas for optimization and improvement.&lt;/p>
&lt;h2 id="cost-optimization-pillar">Cost Optimization Pillar&lt;/h2>
&lt;p>The cost optimization pillar provides best practices for selecting suitable pricing models, monitoring and analyzing usage data to identify opportunities for cost optimization, and implementing mechanisms for cost control, such as automated resource scheduling and usage quotas. It also emphasizes the importance of designing architectures that can scale cost-effectively by leveraging cloud services that offer pay-as-you-go pricing and dynamic resource allocation. By following the guidance of this pillar, organizations can optimize their cloud spending, reduce unnecessary costs, and maximize the value they get from their cloud investments.&lt;/p>
&lt;h2 id="sustainability-pillar">Sustainability Pillar&lt;/h2>
&lt;p>The sustainability pillar is the latest addition to the framework and focuses on designing and operating sustainable systems in the cloud. AWS introduced this pillar to minimize IT systems&amp;rsquo; environmental impact whilst reducing costs and downstream impacts.&lt;/p>
&lt;h2 id="are-you-well-architected">Are you well-architected?&lt;/h2>
&lt;p>You can assess your adherence to the AWS well-architected framework in two ways. The first option is to use an external consultancy company, which AWS can recommend partners for you. Typically these engagements are free to carry out the review but often come with an expectation that the consultancy would carry out some remediation work for you as a paid service. Some AWS partners may offer AWS credits for conducting the review.&lt;/p>
&lt;p>The second option is to run the assessment yourself in the AWS console, which is entirely free, using the AWS Well-Architected Tool. They have three different lenses at the time of writing:&lt;/p>
&lt;p>AWS Well-Architected Framework: The AWS Well-Architected Framework Lens provides foundational questions for you to consider for all your cloud architectures.&lt;/p>
&lt;p>Serverless Lens: The AWS Serverless Application Lens provides additional questions for you to consider for your serverless applications.&lt;/p>
&lt;p>SaaS Lens: The AWS SaaS Lens provides additional questions for you to consider for your Software-as-a-Service (SaaS) applications.&lt;/p>
&lt;p>AWS recommends enabling Trusted Advisor when you start the tool if you have access, as this will provide more context to your questions. The questions are relatively straightforward, but I&amp;rsquo;d recommend talking with your AWS account manager to see if they can provide some training for you and help you walk through the first one.&lt;/p>
&lt;p>You can run through the well-architected framework question in the AWS console using the AWS Well-Architected Tool: &lt;a href="https://eu-west-1.console.aws.amazon.com/wellarchitected/home">https://eu-west-1.console.aws.amazon.com/wellarchitected/home&lt;/a>&lt;/p>
&lt;p>Learn more about the Well-Architected framework here: &lt;a href="https://aws.amazon.com/architecture/well-architected">https://aws.amazon.com/architecture/well-architected&lt;/a>&lt;/p>
&lt;p>&lt;strong>ðŸ“£ Get the Weekly Newsletter Straight to Your Inbox! ðŸ“£&lt;/strong>&lt;/p>
&lt;p>Don&amp;rsquo;t miss out on the latest updates! Subscribe to the &lt;a href="https://news.codewithstu.tv">Observed! Newsletter&lt;/a> now and stay up-to-date with the latest tips and tricks across AWS, Devops and Architecture. &lt;a href="https://news.codewithstu.tv">Click here&lt;/a> to subscribe and start receiving your weekly dose of tech news!&lt;/p></description></item><item><title>Observed No. 6 - Service Meshes</title><link>https://im5tu.io/article/2023/02/observed-no.-6-service-meshes/</link><pubDate>Mon, 20 Feb 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/02/observed-no.-6-service-meshes/</guid><description>&lt;p>Welcome to the sixth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at service meshes.&lt;/p>
&lt;h2 id="what-is-a-service-mesh">What is a service mesh?&lt;/h2>
&lt;p>A service mesh is dedicated infrastructure for managing service-to-service communication within a microservices architecture. It provides a way to manage the complex network of microservices by adding a layer of abstraction between the services and the underlying network.&lt;/p>
&lt;p>In a service mesh architecture, each service instance has a sidecar proxy that manages the communication between services. The proxies handle low-level network traffic, including load balancing, service discovery, traffic routing, and security.&lt;/p>
&lt;p>The service mesh provides a centralised platform for managing and monitoring the communication between services. It provides a way to configure and manage the communication between services without the need to modify the services themselves. The service mesh can also offer advanced features such as circuit breaking, rate limiting, and observability that can help improve the reliability and performance of the microservices architecture.&lt;/p>
&lt;h2 id="what-are-the-key-benefits-of-a-service-mesh">What are the key benefits of a service mesh?&lt;/h2>
&lt;ol>
&lt;li>Traffic management and load balancing: Service meshes provide a way to automatically route traffic between services, distribute load, and implement traffic shaping strategies, such as canary deployments, blue/green deployments, and A/B testing.&lt;/li>
&lt;li>Service discovery: Service meshes provide a centralised platform for discovering and managing the network of microservices. The mesh can automatically detect new services as they deploy and provide a way to route traffic to those services.&lt;/li>
&lt;li>Observability and tracing: Service meshes provide a way to monitor and trace traffic flow between services, which can help identify performance bottlenecks and troubleshoot issues.&lt;/li>
&lt;li>Security: Service meshes can provide security features such as mutual TLS, authentication, and authorisation to ensure that communication between services is secure and encrypted.&lt;/li>
&lt;/ol>
&lt;p>Simplified deployment and management: Service meshes provide a way to manage the network of microservices in a centralised platform, which can simplify deployment, configuration, and management of the microservices architecture, reducing the complexity of managing many services and ensuring that the architecture is consistent and reliable.&lt;/p>
&lt;h2 id="implementations-of-a-service-mesh">Implementations of a service mesh&lt;/h2>
&lt;p>There are many different products on the market, most of which are open source, that provide part or all of the features described above for a service mesh. The most common ones include the following:&lt;/p>
&lt;ol>
&lt;li>Istio: Istio is an open-source service mesh platform that provides traffic management, security, and observability features. It is designed to be vendor-neutral and integrates with Kubernetes, Docker, and other container orchestrators.&lt;/li>
&lt;li>Linkerd: Linkerd is an ultralight service mesh for Kubernetes and other cloud-native environments. It provides features such as traffic management, service discovery, and observability which is designed to be easy to deploy and manage.&lt;/li>
&lt;li>Consul: Consul is a service mesh platform from HashiCorp that provides service discovery, configuration, and segmentation. It can also provide traffic management and security features designed to work with multiple deployment environments, including Kubernetes, VMs, and bare metal.&lt;/li>
&lt;li>AWS App Mesh: AWS App Mesh is a service mesh platform that provides traffic management, observability, and security features for applications deployed on Amazon Web Services (AWS). It supports both containerised and non-containerised applications and can be integrated with other AWS services.&lt;/li>
&lt;/ol>
&lt;h2 id="do-i-need-a-service-mesh">Do I need a service mesh?&lt;/h2>
&lt;p>Service meshes are most beneficial when you have a decent amount of services in your microservices architecture. However, implementing a service mesh can add complexity and overhead and may not be necessary for smaller architectures. If you only have a small number of services, you can manage them using more straightforward tools and techniques. The exact threshold on when to implement a service mesh will depend on the specific use case.&lt;/p>
&lt;p>&lt;strong>ðŸ“£ Get the Weekly Newsletter Straight to Your Inbox! ðŸ“£&lt;/strong>&lt;/p>
&lt;p>Don&amp;rsquo;t miss out on the latest updates! Subscribe to the &lt;a href="https://news.codewithstu.tv">Observed! Newsletter&lt;/a> now and stay up-to-date with the latest tips and tricks across AWS, Devops and Architecture. &lt;a href="https://news.codewithstu.tv">Click here&lt;/a> to subscribe and start receiving your weekly dose of tech news!&lt;/p></description></item></channel></rss>