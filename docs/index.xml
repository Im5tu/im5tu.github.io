<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CodeWithStu's Blog</title><link>https://im5tu.io/</link><description>Recent content on CodeWithStu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 01 Jan 2024 16:00:00 +0000</lastBuildDate><atom:link href="https://im5tu.io/index.xml" rel="self" type="application/rss+xml"/><item><title>The Smartest Way to Onboard Developers</title><link>https://im5tu.io/video/the-smartest-way-to-onboard-developers/</link><pubDate>Mon, 01 Jan 2024 16:00:00 +0000</pubDate><guid>https://im5tu.io/video/the-smartest-way-to-onboard-developers/</guid><description>Change happens. People will leave your team and people join your team. But what if there was an easy way to get new people up to speed in minutes, not weeks. Imagine clippy could hold your hand through a code base which you can easily refer back to at any time. The best bit? Anyone can do this.</description></item><item><title>Lessons learnt after interviewing over 300 engineers</title><link>https://im5tu.io/article/2023/11/lessons-learnt-after-interviewing-over-300-engineers/</link><pubDate>Fri, 03 Nov 2023 17:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/11/lessons-learnt-after-interviewing-over-300-engineers/</guid><description>Imagine this: You&amp;rsquo;ve just landed an interview for your dream software engineering job. You&amp;rsquo;re confident, well-prepared, and ready to shine. But did you know that simple mistakes might hold you back from that dream role? After conducting over 300 interviews with .NET developers &amp;amp; DevOps engineers, I want to share three tips to improve your chances of impressing an interviewer.
We&amp;rsquo;ll explore the importance of conciseness, the impact of preparation, and the necessity of clarity. By the end, you&amp;rsquo;ll have actionable advice and exercises to help you stand out in your next interview.</description></item><item><title>Using The Factory Design Pattern in .NET</title><link>https://im5tu.io/article/2023/05/using-the-factory-design-pattern-in-.net/</link><pubDate>Tue, 09 May 2023 07:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/05/using-the-factory-design-pattern-in-.net/</guid><description>The Factory Design pattern is a popular technique for creating objects in .NET applications. It allows developers to create objects without specifying the exact class of object that will be created, making it an excellent option for improving code flexibility and maintainability. This article will explore the concept behind the Factory Design pattern, its benefits, and how it can be implemented in C# code.</description></item><item><title>2 MUST USE features for dotnet test debugging</title><link>https://im5tu.io/video/2-must-use-features-for-dotnet-test-debugging/</link><pubDate>Mon, 08 May 2023 12:08:26 +0100</pubDate><guid>https://im5tu.io/video/2-must-use-features-for-dotnet-test-debugging/</guid><description>In this video, Stu demonstrates how to use the dotnet test feature to debug two types of test failures: test crashes and test hangs. Stu shows how to use the &amp;ldquo;blame-crash&amp;rdquo; parameter to generate sequence and memory dump files to help diagnose test crashes, and the &amp;ldquo;blame-hang&amp;rdquo; parameter to collect hang dumps when tests exceed the given timeout. He also shares how to set these parameters as csproj properties to achieve consistent debugging behavior. By the end of this video, viewers will have a valuable tool to help them save time when debugging test failures.</description></item><item><title>Using The Decorator Design Pattern in .NET</title><link>https://im5tu.io/article/2023/05/using-the-decorator-design-pattern-in-.net/</link><pubDate>Mon, 08 May 2023 07:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/05/using-the-decorator-design-pattern-in-.net/</guid><description>The Decorator design pattern is a widely-used technique for extending the functionality of an existing object or component. By wrapping an object in a series of decorators, you can add new behaviours, features, or properties without modifying the underlying code. This makes it a powerful and flexible way to customize and extend software systems. In .NET, the Decorator design pattern can be used in various ways to enhance and modify existing classes and components, which can help you write more maintainable, extensible, and flexible code.</description></item><item><title>Using The Singleton Design Pattern in .NET</title><link>https://im5tu.io/article/2023/05/using-the-singleton-design-pattern-in-.net/</link><pubDate>Sun, 07 May 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/05/using-the-singleton-design-pattern-in-.net/</guid><description>As a .NET developer, you understand the importance of writing efficient, scalable, and maintainable code. One design pattern that can help achieve these goals is the Singleton pattern. The Singleton pattern is a creational pattern that ensures only one instance of a class is created and provides global access to that instance throughout the application. In this blog post, we’ll look in-depth at the Singleton pattern, exploring its benefits, use cases, and implementation in C#. By the end of this post, you’ll have a solid understanding of how to leverage the Singleton pattern to optimize your .NET applications.</description></item><item><title>Observed No. 12 - Removing Pre-Commit Dependencies With Docker</title><link>https://im5tu.io/article/2023/05/observed-no.-12-removing-pre-commit-dependencies-with-docker/</link><pubDate>Mon, 01 May 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/05/observed-no.-12-removing-pre-commit-dependencies-with-docker/</guid><description>Welcome to the 12th edition of Observed! The newsletter delivers a tip you can implement across many categories like AWS, Terraform and General DevOps practices in your infrastructure. This week&amp;rsquo;s edition looks how we can use Precommit with existing docker images.</description></item><item><title>Saying Hello To The Newest .NET Community - WeAreDotnet!</title><link>https://im5tu.io/video/saying-hello-to-the-newest-net-community-wearedotnet/</link><pubDate>Thu, 27 Apr 2023 08:54:06 +0100</pubDate><guid>https://im5tu.io/video/saying-hello-to-the-newest-net-community-wearedotnet/</guid><description>In this first interview of a series, we&amp;rsquo;re meeting the founders of WeAreDotnet, a new .NET community. Tim shares his motivations for starting a new community with Matthias &amp;amp; Gerald and their plans for its future. We dive into what sets WeAreDotnet apart from other .NET communities, how they aim to help developers grow their skills, and the kind of events and resources they offer. Join us as we get to know this exciting new addition to the .NET community landscape!</description></item><item><title>Observed No. 11 - Saving Costs on AWS</title><link>https://im5tu.io/article/2023/04/observed-no.-11-saving-costs-on-aws/</link><pubDate>Mon, 24 Apr 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/04/observed-no.-11-saving-costs-on-aws/</guid><description>Welcome to the 11th edition of Observed! The newsletter delivers a tip you can implement across many categories like AWS, Terraform and General DevOps practices in your infrastructure. This week&amp;rsquo;s edition looks at AWS Cost Savings.
Every company seems to be cutting costs in one way or another. Let’s look at different ways you can visualize and reduce costs.</description></item><item><title>Observed No. 10 - Chaos Engineering on AWS</title><link>https://im5tu.io/article/2023/03/observed-no.-10-chaos-engineering-on-aws/</link><pubDate>Mon, 20 Mar 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/03/observed-no.-10-chaos-engineering-on-aws/</guid><description>Welcome to the 10th edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at the practice of Chaos Engineering.</description></item><item><title>Using the Builder Design Pattern in .NET</title><link>https://im5tu.io/article/2023/03/using-the-builder-design-pattern-in-.net/</link><pubDate>Tue, 14 Mar 2023 07:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/03/using-the-builder-design-pattern-in-.net/</guid><description>As a .NET developer, you&amp;rsquo;re probably familiar with the importance of design patterns for creating maintainable and flexible code. The Builder pattern is one of the most potent creational patterns in the .NET ecosystem. In this blog post, we&amp;rsquo;ll dive deep into the Builder design pattern, explaining what it is, what problems it solves, how to implement it in C#, and answering frequently asked questions.</description></item><item><title>Observed No. 9 - SLIs vs SLOs vs SLAs</title><link>https://im5tu.io/article/2023/03/observed-no.-9-slis-vs-slos-vs-slas/</link><pubDate>Mon, 13 Mar 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/03/observed-no.-9-slis-vs-slos-vs-slas/</guid><description>Welcome to the 9th edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition examines the differences between SLIs, SLOs and SLAs.</description></item><item><title>Observed No. 8 - Continuous Integration vs Continuous Delivery vs Continuous Deployment</title><link>https://im5tu.io/article/2023/03/observed-no.-8-continuous-integration-vs-continuous-delivery-vs-continuous-deployment/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/03/observed-no.-8-continuous-integration-vs-continuous-delivery-vs-continuous-deployment/</guid><description>Welcome to the 8th edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at the differences between continuous integration, continuous delivery and continuous deployment.</description></item><item><title>Observed No. 7 - Well Architected</title><link>https://im5tu.io/article/2023/02/observed-no.-7-well-architected/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/02/observed-no.-7-well-architected/</guid><description>Welcome to the seventh edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at the Well-Architected framework.</description></item><item><title>Unlocking the best of AWS Route 53</title><link>https://im5tu.io/video/unlocking-the-best-of-aws-route-53/</link><pubDate>Sun, 26 Feb 2023 07:47:00 +0000</pubDate><guid>https://im5tu.io/video/unlocking-the-best-of-aws-route-53/</guid><description>In this video, I will show you the power of wildcards, health checks, and, my favourite, a Netflix-style multi-region DNS setup for scenarios on AWS Route 53. You&amp;rsquo;ll learn about the many capabilities of this service and how to use it to your advantage. Each section is accompanied by Terraform code. This video was originally was posted under DevOpsWithStu, but since then I have merged the channels together.</description></item><item><title>How to Use AWS IAM Identity Centre with Terraform</title><link>https://im5tu.io/video/how-to-use-aws-iam-identity-centre-with-terraform/</link><pubDate>Sun, 26 Feb 2023 07:46:01 +0000</pubDate><guid>https://im5tu.io/video/how-to-use-aws-iam-identity-centre-with-terraform/</guid><description>This video will look at how to log in with AWS IAM Identity Centre and what to do when Terraform doesn&amp;rsquo;t work out of the box! Learn some of the inner mechanics behind AWS SSO Login. This video was originally was posted under DevOpsWithStu, but since then I have merged the channels together.</description></item><item><title>Create Terraform Modules Like A Pro</title><link>https://im5tu.io/video/create-terraform-modules-like-a-pro/</link><pubDate>Sun, 26 Feb 2023 07:45:00 +0000</pubDate><guid>https://im5tu.io/video/create-terraform-modules-like-a-pro/</guid><description>In this video, we&amp;rsquo;ll look at a technique you can use to upgrade your Terraform modules. Over the course of the last 4/5 years, I&amp;rsquo;ve noticed that there is always a trend within companies to build modules for specific things/use cases. Rarely do I see these teams account for the one thing they need to operate the infrastructure they make. This video was originally was posted under DevOpsWithStu, but since then I have merged the channels together.</description></item><item><title>Observed No. 6 - Service Meshes</title><link>https://im5tu.io/article/2023/02/observed-no.-6-service-meshes/</link><pubDate>Mon, 20 Feb 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/02/observed-no.-6-service-meshes/</guid><description>Welcome to the sixth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at service meshes.
What is a service mesh? A service mesh is dedicated infrastructure for managing service-to-service communication within a microservices architecture. It provides a way to manage the complex network of microservices by adding a layer of abstraction between the services and the underlying network.</description></item><item><title>Observed No. 5 - MACH Architectures</title><link>https://im5tu.io/article/2023/01/observed-no.-5-mach-architectures/</link><pubDate>Mon, 30 Jan 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-5-mach-architectures/</guid><description>Welcome to the fifth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at MACH architectures.</description></item><item><title>Observed No. 4 - Emerging Pattern: Centralised Ingress</title><link>https://im5tu.io/article/2023/01/observed-no.-4-emerging-pattern-centralised-ingress/</link><pubDate>Mon, 23 Jan 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-4-emerging-pattern-centralised-ingress/</guid><description>Welcome to the fourth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at a common pattern emerging across the industry: Centralised Ingress.</description></item></channel></rss>