<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>benchmarks on CodeWithStu's Blog</title><link>https://im5tu.io/tags/benchmarks/</link><description>Recent content in benchmarks on CodeWithStu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 26 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://im5tu.io/tags/benchmarks/index.xml" rel="self" type="application/rss+xml"/><item><title>.NET Serialization Benchmarks - Feb 2023</title><link>https://im5tu.io/article/2023/02/.net-serialization-benchmarks-feb-2023/</link><pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/02/.net-serialization-benchmarks-feb-2023/</guid><description>As part of a YouTube video, I went through a bunch of serializers to see their current levels of performance. As it&amp;rsquo;s been a while, I thought it would be a good idea to get the latest numbers and have a general update. The code is hosted on a Github Repository, which I&amp;rsquo;m happy to accept community contributions on including fixing any minor issues or adding serialization frameworks.
Changes In This Benchmark Bebop allocations have been improved thanks to AndrewMD5 (PR) Added SourceGenerator version of System.</description></item></channel></rss>