<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aspnetcore on CodeWithStu's Blog</title><link>https://im5tu.io/tags/aspnetcore/</link><description>Recent content in aspnetcore on CodeWithStu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 01 Jan 2024 16:00:00 +0000</lastBuildDate><atom:link href="https://im5tu.io/tags/aspnetcore/index.xml" rel="self" type="application/rss+xml"/><item><title>The Smartest Way to Onboard Developers</title><link>https://im5tu.io/video/the-smartest-way-to-onboard-developers/</link><pubDate>Mon, 01 Jan 2024 16:00:00 +0000</pubDate><guid>https://im5tu.io/video/the-smartest-way-to-onboard-developers/</guid><description>&lt;p>Change happens. People will leave your team and people join your team. But what if there was an easy way to get new people up to speed in minutes, not weeks. Imagine clippy could hold your hand through a code base which you can easily refer back to at any time. The best bit? Anyone can do this.&lt;/p></description></item><item><title>The Way You Publish Apps Is Changing | .NET 7</title><link>https://im5tu.io/video/the-way-you-publish-apps-is-changing-net-7/</link><pubDate>Tue, 15 Nov 2022 13:00:00 +0000</pubDate><guid>https://im5tu.io/video/the-way-you-publish-apps-is-changing-net-7/</guid><description>&lt;p>Go from zero to docker image in 30 seconds! In this video, we&amp;rsquo;re going to discuss the changes that are happening with publishing apps in .NET 7. I&amp;rsquo;ll show you how to make the changes backwards compatible with .NET 6 and how to customize your experience.&lt;/p></description></item><item><title>Mocking APIs Made Easy with Mockaco</title><link>https://im5tu.io/video/mocking-apis-made-easy-with-mockaco/</link><pubDate>Fri, 07 Oct 2022 07:00:14 +0100</pubDate><guid>https://im5tu.io/video/mocking-apis-made-easy-with-mockaco/</guid><description>&lt;p>Mockaco is an HTTP-based dotnet API mocking server with fast setup - great for when you need to setup a mock API to test locally. As Mockaco is also a docker image, we can utilize this in our build pipelines to get some confidence in our tests without requiring external dependencies.&lt;/p></description></item><item><title>ASP.NET Core Versioning: Minimal APIs</title><link>https://im5tu.io/article/2022/10/asp.net-core-versioning-minimal-apis/</link><pubDate>Tue, 04 Oct 2022 12:00:00 +0100</pubDate><guid>https://im5tu.io/article/2022/10/asp.net-core-versioning-minimal-apis/</guid><description>This blog post is also available as a video on my YouTube Channel.
If your API is a key part of your product you are going to want to version your APIs. One of the major reasons that we consider versioning our api’s is so that we provide a consistent experience for our users. If we consistently change our API’s then our consumers will break, they will get annoyed and eventually leave our product.</description></item><item><title>ASP.NET Core Versioning: MVC APIs</title><link>https://im5tu.io/article/2022/09/asp.net-core-versioning-mvc-apis/</link><pubDate>Fri, 30 Sep 2022 12:00:00 +0100</pubDate><guid>https://im5tu.io/article/2022/09/asp.net-core-versioning-mvc-apis/</guid><description>This blog post is also available as a video on my YouTube Channel.
If your API is a key part of your product you are going to want to version your APIs. One of the major reasons that we consider versioning our api’s is so that we provide a consistent experience for our users. If we consistently change our API’s then our consumers will break, they will get annoyed and eventually leave our product.</description></item><item><title>Pro Testing with Xunit &amp; Localstack</title><link>https://im5tu.io/article/2022/09/pro-testing-with-xunit-localstack/</link><pubDate>Sun, 25 Sep 2022 12:00:00 +0100</pubDate><guid>https://im5tu.io/article/2022/09/pro-testing-with-xunit-localstack/</guid><description>&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube-nocookie.com/embed/Ad7wruPBp3M" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>&lt;em>This blog post is also available as a video on my &lt;a href="https://codewithstu.tv">YouTube Channel&lt;/a>.&lt;/em>&lt;/p>
&lt;p>Ever wondered how to get docker images to run nicely with XUnit tests? Then you&amp;rsquo;re in the right place. Let me show you how to setup &lt;a href="https://localstack.cloud">Localstack&lt;/a> with XUnit properly so that the only thing you need to worry about is having docker running. I&amp;rsquo;m using Localstack as the example but you can repeat a very similar process using the techniques shown here.&lt;/p></description></item><item><title>How To Version ASP.NET Core MVC &amp; Minimal APIs</title><link>https://im5tu.io/video/how-to-version-asp-net-core-mvc-minimal-apis/</link><pubDate>Tue, 13 Sep 2022 05:45:01 +0100</pubDate><guid>https://im5tu.io/video/how-to-version-asp-net-core-mvc-minimal-apis/</guid><description>&lt;p>Versioning API&amp;rsquo;s can be extremely important for your product. Learn 4 different ways to version your APIs in .NET minimal APIs and .NET MVC APIs. The techniques you&amp;rsquo;ll learn are: content type negotiation versioning, custom headers versioning, query string versioning and URL versioning.&lt;/p></description></item><item><title>Using PASETO in .NET - #shorts</title><link>https://im5tu.io/video/using-paseto-in-net-shorts/</link><pubDate>Thu, 18 Aug 2022 22:44:48 +0100</pubDate><guid>https://im5tu.io/video/using-paseto-in-net-shorts/</guid><description>&lt;p>For the full video, go here: &lt;a href="https://www.youtube.com/watch?v=oNQdDjvS_54">https://www.youtube.com/watch?v=oNQdDjvS_54&lt;/a>&lt;/p>
&lt;p>Creating a restricted file download with S3 is easy with pre-signed URLs. But what your endpoint isn&amp;rsquo;t a file? Or you&amp;rsquo;re not sourcing it from S3? In this video, we take a look at an upcoming technology called PASETO (platform agnostic security token) and see how to create an endpoint that is restricted by time.&lt;/p></description></item><item><title>A New Way to Create Time Restricted Endpoints in .NET</title><link>https://im5tu.io/video/a-new-way-to-create-time-restricted-endpoints-in-net/</link><pubDate>Mon, 15 Aug 2022 06:00:23 +0100</pubDate><guid>https://im5tu.io/video/a-new-way-to-create-time-restricted-endpoints-in-net/</guid><description>&lt;p>Creating a restricted file download with S3 is easy with pre-signed URLs. But what your endpoint isn&amp;rsquo;t a file? Or you&amp;rsquo;re not sourcing it from S3? In this video, we take a look at an upcoming technology called PASETO (platform agnostic security token) and see how to create an endpoint that is restricted by time.&lt;/p></description></item><item><title>Implementing Simple Feature Toggles In AspNetCore Using IConfiguration</title><link>https://im5tu.io/article/2020/08/implementing-simple-feature-toggles-in-aspnetcore-using-iconfiguration/</link><pubDate>Sat, 29 Aug 2020 11:45:00 +0100</pubDate><guid>https://im5tu.io/article/2020/08/implementing-simple-feature-toggles-in-aspnetcore-using-iconfiguration/</guid><description>&lt;p>Recently, we&amp;rsquo;ve had the need to build a few feature toggles in our applications that can be changed at runtime. This article walks through a simple approach that you can use in your applications, including a description of a route to dynamic feature toggles.&lt;/p></description></item><item><title>Diagnostics in .Net Core 3: Listening to inbound HTTP requests</title><link>https://im5tu.io/article/2020/06/diagnostics-in-.net-core-3-listening-to-inbound-http-requests/</link><pubDate>Fri, 19 Jun 2020 14:00:00 +0000</pubDate><guid>https://im5tu.io/article/2020/06/diagnostics-in-.net-core-3-listening-to-inbound-http-requests/</guid><description>&lt;p>In my &lt;a href="https://im5tu.io/article/2020/06/diagnostics-in-.net-core-3-listening-to-outbound-http-requests/">previous article&lt;/a> we took a look at how to monitor outbound HTTP requests using a &lt;code>DiagnosticListener&lt;/code>. In this article, we will re-use some of the same components to monitor inbound HTTP requests. We could use middleware to do as most approaches do, but this approach is highly dependent on the middleware that you have and the duration of this, so we will re-use some of the code from last time.&lt;/p></description></item><item><title>Utf8Json Media Formatters for ASP.Net Core</title><link>https://im5tu.io/article/2018/07/utf8json-media-formatters-for-asp.net-core/</link><pubDate>Sun, 29 Jul 2018 16:40:00 +0100</pubDate><guid>https://im5tu.io/article/2018/07/utf8json-media-formatters-for-asp.net-core/</guid><description>&lt;p>Recently, I have been looking at the &lt;a href="https://github.com/neuecc/Utf8Json">Utf8Json&lt;/a> project and evaluating for use in our high performance payments API. Looking at the benchmarks on the Github page, and running my own benchmarks, the numbers stated seemed to tally up, so I built a few media formatters for aspnet core.&lt;/p></description></item><item><title>Automated Builds in VSTS with YML Build Definitions</title><link>https://im5tu.io/article/2018/06/automated-builds-in-vsts-with-yml-build-definitions/</link><pubDate>Sun, 17 Jun 2018 21:35:00 +0100</pubDate><guid>https://im5tu.io/article/2018/06/automated-builds-in-vsts-with-yml-build-definitions/</guid><description>&lt;p>In this article we will explore a preview feature inside of Visual Studio Team Services (VSTS) called YML Build Definitions. In essence, this allows you to change your build process from a &lt;code>.yml&lt;/code> file in your git repository much in the same way as you can do with other services such as AppVeyor. During the article, we will setup a build definition for an Aspnet Core website.&lt;/p></description></item><item><title>Enabling HTTP Strict Transport Security HSTS via ASP Net MVC ActionFilters</title><link>https://im5tu.io/article/2014/04/enabling-http-strict-transport-security-hsts-via-asp-net-mvc-actionfilters/</link><pubDate>Mon, 21 Apr 2014 18:19:47 +0000</pubDate><guid>https://im5tu.io/article/2014/04/enabling-http-strict-transport-security-hsts-via-asp-net-mvc-actionfilters/</guid><description>&lt;p>After reading &lt;a href="http://www.troyhunt.com/">Troy Hunt&amp;rsquo;s&lt;/a> free ebook on the &lt;a href="http://www.troyhunt.com/2011/12/free-ebook-owasp-top-10-for-net.html">OWASP Top 10 for .Net Developers&lt;/a>, I discovered an additional mechanism to help developers secure their websites. That mechanism is HTTP Strict Transport Security.&lt;/p></description></item></channel></rss>