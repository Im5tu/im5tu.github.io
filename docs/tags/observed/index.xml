<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>observed on CodeWithStu's Blog</title><link>https://im5tu.io/tags/observed/</link><description>Recent content in observed on CodeWithStu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 24 Apr 2023 01:00:00 +0000</lastBuildDate><atom:link href="https://im5tu.io/tags/observed/index.xml" rel="self" type="application/rss+xml"/><item><title>Observed No. 11 - Saving Costs on AWS</title><link>https://im5tu.io/article/2023/04/observed-no.-11-saving-costs-on-aws/</link><pubDate>Mon, 24 Apr 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/04/observed-no.-11-saving-costs-on-aws/</guid><description>Welcome to the 11th edition of Observed! The newsletter delivers a tip you can implement across many categories like AWS, Terraform and General DevOps practices in your infrastructure. This week&amp;rsquo;s edition looks at AWS Cost Savings.
Every company seems to be cutting costs in one way or another. Let’s look at different ways you can visualize and reduce costs.
AWS Cost Explorer AWS Cost Explorer should be your first stop when analyzing costs.</description></item><item><title>Observed No. 10 - Chaos Engineering on AWS</title><link>https://im5tu.io/article/2023/03/observed-no.-10-chaos-engineering-on-aws/</link><pubDate>Mon, 20 Mar 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/03/observed-no.-10-chaos-engineering-on-aws/</guid><description>Welcome to the 10th edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at the practice of Chaos Engineering.
What is Chaos Engineering? Chaos engineering is an innovative approach to testing and enhancing complex systems&amp;rsquo; reliability, resilience, and robustness. Born out of a need to ensure system stability in the face of unpredictable events, chaos engineering involves intentionally injecting faults, errors, and failures into a system to evaluate its behaviour and improve its ability to withstand such occurrences.</description></item><item><title>Observed No. 9 - SLIs vs SLOs vs SLAs</title><link>https://im5tu.io/article/2023/03/observed-no.-9-slis-vs-slos-vs-slas/</link><pubDate>Mon, 13 Mar 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/03/observed-no.-9-slis-vs-slos-vs-slas/</guid><description>Welcome to the 9th edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition examines the differences between SLIs, SLOs and SLAs.
When it comes to measuring the quality of your service, three terms are frequently used: Service Level Indicators (SLIs), Service Level Objectives (SLOs), and Service Level Agreements (SLAs).</description></item><item><title>Observed No. 8 - Continuous Integration vs Continuous Delivery vs Continuous Deployment</title><link>https://im5tu.io/article/2023/03/observed-no.-8-continuous-integration-vs-continuous-delivery-vs-continuous-deployment/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/03/observed-no.-8-continuous-integration-vs-continuous-delivery-vs-continuous-deployment/</guid><description>Welcome to the 8th edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at the differences between continuous integration, continuous delivery and continuous deployment.
Continuous Integration Continuous Integration (CI) is the act of integrating code changes into a shared repository, and automated tests verify each integration. The aim is to catch and fix errors early in the development cycle rather than waiting for a significant release.</description></item><item><title>Observed No. 7 - Well Architected</title><link>https://im5tu.io/article/2023/02/observed-no.-7-well-architected/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/02/observed-no.-7-well-architected/</guid><description>Welcome to the seventh edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at the Well-Architected framework.
What is the Well-Architected Framework? The Well-Architected Framework is a set of best practices and guidelines designed to help businesses build and operate reliable, secure, efficient, and cost-effective systems in the cloud.</description></item><item><title>Observed No. 6 - Service Meshes</title><link>https://im5tu.io/article/2023/02/observed-no.-6-service-meshes/</link><pubDate>Mon, 20 Feb 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/02/observed-no.-6-service-meshes/</guid><description>Welcome to the sixth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at service meshes.
What is a service mesh? A service mesh is dedicated infrastructure for managing service-to-service communication within a microservices architecture. It provides a way to manage the complex network of microservices by adding a layer of abstraction between the services and the underlying network.</description></item><item><title>Observed No. 5 - MACH Architectures</title><link>https://im5tu.io/article/2023/01/observed-no.-5-mach-architectures/</link><pubDate>Mon, 30 Jan 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-5-mach-architectures/</guid><description>Welcome to the fifth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at MACH architectures.
What are MACH architectures? A MACH architecture is a set of principles for modern application architectures. MACH is a relatively new term in the industry and is quickly gaining popularity because of the level of interoperability, scalability and composability.</description></item><item><title>Observed No. 4 - Emerging Pattern: Centralised Ingress</title><link>https://im5tu.io/article/2023/01/observed-no.-4-emerging-pattern-centralised-ingress/</link><pubDate>Mon, 23 Jan 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-4-emerging-pattern-centralised-ingress/</guid><description>Welcome to the fourth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at a common pattern emerging across the industry: Centralised Ingress.
What is ingress traffic? Ingress traffic refers to communication with your network from outside its perimeter. Typically when referring to ingress traffic, we talk about traffic from external consumers of our services, usually via HTTP or HTTPS.</description></item><item><title>Observed No. 3 - Understanding Split Horizon DNS: How it works and How to Implement it in AWS</title><link>https://im5tu.io/article/2023/01/observed-no.-3-understanding-split-horizon-dns-how-it-works-and-how-to-implement-it-in-aws/</link><pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-3-understanding-split-horizon-dns-how-it-works-and-how-to-implement-it-in-aws/</guid><description>Welcome to the third edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at Split Horizon DNS.
What is Split Horizon DNS? Split Horizon DNS is a technique used in DNS to provide different responses to queries depending on where the query originates. For example, a DNS request originating from inside your network may elicit a different response to a DNS request from a consumer of your application.</description></item><item><title>Observed No. 2 - Upgrade Your Terraform Modules</title><link>https://im5tu.io/article/2023/01/observed-no.-2-upgrade-your-terraform-modules/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-2-upgrade-your-terraform-modules/</guid><description>Welcome to the second edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at a technique you can use to upgrade your Terraform modules.
In case you aren’t sure what a Terraform module is, they are a self-contained package of Terraform configurations managed as a group. Modules can be used to create reusable components, improve organization and structure, and improve the reusability and maintainability of your infrastructure.</description></item><item><title>Observed No. 1 - VPC Endpoint Policies</title><link>https://im5tu.io/article/2023/01/observed-no.-1-vpc-endpoint-policies/</link><pubDate>Mon, 02 Jan 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-1-vpc-endpoint-policies/</guid><description>Welcome to the very first edition of Observed! Each week I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at VPC endpoint policies in AWS.
What Are VPC Endpoints? VPC endpoints are network interfaces you can create in your VPC to enable communication between your VPC and other AWS services without using an Internet gateway, VPN, or VPC peering.</description></item></channel></rss>