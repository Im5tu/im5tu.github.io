<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on CodeWithStu's Blog</title><link>https://im5tu.io/tags/devops/</link><description>Recent content in devops on CodeWithStu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Mar 2023 01:00:00 +0000</lastBuildDate><atom:link href="https://im5tu.io/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Observed No. 9 - SLIs vs SLOs vs SLAs</title><link>https://im5tu.io/article/2023/03/observed-no.-9-slis-vs-slos-vs-slas/</link><pubDate>Mon, 13 Mar 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/03/observed-no.-9-slis-vs-slos-vs-slas/</guid><description>Welcome to the 9th edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition examines the differences between SLIs, SLOs and SLAs.
When it comes to measuring the quality of your service, three terms are frequently used: Service Level Indicators (SLIs), Service Level Objectives (SLOs), and Service Level Agreements (SLAs).</description></item><item><title>Observed No. 8 - Continuous Integration vs Continuous Delivery vs Continuous Deployment</title><link>https://im5tu.io/article/2023/03/observed-no.-8-continuous-integration-vs-continuous-delivery-vs-continuous-deployment/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/03/observed-no.-8-continuous-integration-vs-continuous-delivery-vs-continuous-deployment/</guid><description>Welcome to the 8th edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at the differences between continuous integration, continuous delivery and continuous deployment.
Continuous Integration Continuous Integration (CI) is the act of integrating code changes into a shared repository, and automated tests verify each integration. The aim is to catch and fix errors early in the development cycle rather than waiting for a significant release.</description></item><item><title>Observed No. 7 - Well Architected</title><link>https://im5tu.io/article/2023/02/observed-no.-7-well-architected/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/02/observed-no.-7-well-architected/</guid><description>Welcome to the seventh edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at the Well-Architected framework.
What is the Well-Architected Framework? The Well-Architected Framework is a set of best practices and guidelines designed to help businesses build and operate reliable, secure, efficient, and cost-effective systems in the cloud.</description></item><item><title>Observed No. 6 - Service Meshes</title><link>https://im5tu.io/article/2023/02/observed-no.-6-service-meshes/</link><pubDate>Mon, 20 Feb 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/02/observed-no.-6-service-meshes/</guid><description>Welcome to the sixth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at service meshes.
What is a service mesh? A service mesh is dedicated infrastructure for managing service-to-service communication within a microservices architecture. It provides a way to manage the complex network of microservices by adding a layer of abstraction between the services and the underlying network.</description></item><item><title>Observed No. 5 - MACH Architectures</title><link>https://im5tu.io/article/2023/01/observed-no.-5-mach-architectures/</link><pubDate>Mon, 30 Jan 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-5-mach-architectures/</guid><description>Welcome to the fifth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at MACH architectures.
What are MACH architectures? A MACH architecture is a set of principles for modern application architectures. MACH is a relatively new term in the industry and is quickly gaining popularity because of the level of interoperability, scalability and composability.</description></item><item><title>Observed No. 4 - Emerging Pattern: Centralised Ingress</title><link>https://im5tu.io/article/2023/01/observed-no.-4-emerging-pattern-centralised-ingress/</link><pubDate>Mon, 23 Jan 2023 02:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-4-emerging-pattern-centralised-ingress/</guid><description>Welcome to the fourth edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at a common pattern emerging across the industry: Centralised Ingress.
What is ingress traffic? Ingress traffic refers to communication with your network from outside its perimeter. Typically when referring to ingress traffic, we talk about traffic from external consumers of our services, usually via HTTP or HTTPS.</description></item><item><title>Observed No. 3 - Understanding Split Horizon DNS: How it works and How to Implement it in AWS</title><link>https://im5tu.io/article/2023/01/observed-no.-3-understanding-split-horizon-dns-how-it-works-and-how-to-implement-it-in-aws/</link><pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-3-understanding-split-horizon-dns-how-it-works-and-how-to-implement-it-in-aws/</guid><description>Welcome to the third edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at Split Horizon DNS.
What is Split Horizon DNS? Split Horizon DNS is a technique used in DNS to provide different responses to queries depending on where the query originates. For example, a DNS request originating from inside your network may elicit a different response to a DNS request from a consumer of your application.</description></item><item><title>Observed No. 2 - Upgrade Your Terraform Modules</title><link>https://im5tu.io/article/2023/01/observed-no.-2-upgrade-your-terraform-modules/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-2-upgrade-your-terraform-modules/</guid><description>Welcome to the second edition of Observed! Your weekly newsletter, where I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at a technique you can use to upgrade your Terraform modules.
In case you arenâ€™t sure what a Terraform module is, they are a self-contained package of Terraform configurations managed as a group. Modules can be used to create reusable components, improve organization and structure, and improve the reusability and maintainability of your infrastructure.</description></item><item><title>Observed No. 1 - VPC Endpoint Policies</title><link>https://im5tu.io/article/2023/01/observed-no.-1-vpc-endpoint-policies/</link><pubDate>Mon, 02 Jan 2023 01:00:00 +0000</pubDate><guid>https://im5tu.io/article/2023/01/observed-no.-1-vpc-endpoint-policies/</guid><description>Welcome to the very first edition of Observed! Each week I bring you a tip you can implement in your infrastructure across many categories like AWS, Terraform and General DevOps practices. This week&amp;rsquo;s edition looks at VPC endpoint policies in AWS.
What Are VPC Endpoints? VPC endpoints are network interfaces you can create in your VPC to enable communication between your VPC and other AWS services without using an Internet gateway, VPN, or VPC peering.</description></item><item><title>Building a Zero Trust Architecture In AWS</title><link>https://im5tu.io/article/2020/12/building-a-zero-trust-architecture-in-aws/</link><pubDate>Sat, 05 Dec 2020 15:38:58 +0000</pubDate><guid>https://im5tu.io/article/2020/12/building-a-zero-trust-architecture-in-aws/</guid><description>&lt;p>In the vast majority of companies that I&amp;rsquo;ve been in, software engineering &amp;amp; infrastructure best practises have often been left as something that needs to be updated later because building the product comes first. This is completely understandable as if you don&amp;rsquo;t have a product, you don&amp;rsquo;t have employment. This presents problems later when companies are beginning to scale rapidly and become popular. Not only does the company becomes a target for malicious actors, but security-related incidents can easily occur by leaving storage devices open accidentally. Once a malicious actor is in your system, you usually have pretty big problems unless you design your architectures with Zero Trust in mind.&lt;/p></description></item><item><title>Quick Tip: Accessing a Azure DevOps secret from within a scripted step</title><link>https://im5tu.io/article/2018/12/quick-tip-accessing-a-azure-devops-secret-from-within-a-scripted-step/</link><pubDate>Wed, 26 Dec 2018 14:00:00 +0000</pubDate><guid>https://im5tu.io/article/2018/12/quick-tip-accessing-a-azure-devops-secret-from-within-a-scripted-step/</guid><description>&lt;p>In today&amp;rsquo;s quick tip, we are going to see how we can access a secret that we&amp;rsquo;ve defined in a variable group as part of a Azure DevOps yml based build.&lt;/p></description></item><item><title>Building a custom build agent image with Docker and Azure DevOps pipelines</title><link>https://im5tu.io/article/2018/12/building-a-custom-build-agent-image-with-docker-and-azure-devops-pipelines/</link><pubDate>Mon, 24 Dec 2018 14:00:00 +0000</pubDate><guid>https://im5tu.io/article/2018/12/building-a-custom-build-agent-image-with-docker-and-azure-devops-pipelines/</guid><description>&lt;p>In this article, we will learn how to use a custom dockerfile as the bases for a customised Azure DevOps build agent. There are many reasons why you might want to do this, including running custom tooling that takes a while to setup or tooling that isn&amp;rsquo;t supported yet.&lt;/p></description></item><item><title>Building Service Fabric Apps With VSTS YML Build Definitions</title><link>https://im5tu.io/article/2018/06/building-service-fabric-apps-with-vsts-yml-build-definitions/</link><pubDate>Sat, 30 Jun 2018 19:40:00 +0100</pubDate><guid>https://im5tu.io/article/2018/06/building-service-fabric-apps-with-vsts-yml-build-definitions/</guid><description>In my previous article, we setup a standarised build using the new YML build definitions within VSTS, using the .Net CLI tooling. In this article, we will use the same setup as our base, but we will build and publish a service fabric application.
Our sample build file has the following steps:
Clean Sources Install the Dotnet CLI Restore Packages Build Projects Test Projects Publish the Web App Publish Build Artifacts Tag VSTS Build For our service fabric build, we will need the following steps:</description></item><item><title>Automated Builds in VSTS with YML Build Definitions</title><link>https://im5tu.io/article/2018/06/automated-builds-in-vsts-with-yml-build-definitions/</link><pubDate>Sun, 17 Jun 2018 21:35:00 +0100</pubDate><guid>https://im5tu.io/article/2018/06/automated-builds-in-vsts-with-yml-build-definitions/</guid><description>In this article we will explore a preview feature inside of Visual Studio Team Services (VSTS) called YML Build Definitions. In essence, this allows you to change your build process from a .yml file in your git repository much in the same way as you can do with other services such as AppVeyor. During the article, we will setup a build definition for an Aspnet Core website.
Prerequisites Before we take a look at the struture of the file, you will need to complete the following tasks:</description></item><item><title>Ensuring samesite cookies with URL Rewrite</title><link>https://im5tu.io/article/2017/06/ensuring-samesite-cookies-with-url-rewrite/</link><pubDate>Sun, 11 Jun 2017 20:50:11 +0100</pubDate><guid>https://im5tu.io/article/2017/06/ensuring-samesite-cookies-with-url-rewrite/</guid><description>&lt;p>In this article, we will increase our websites level of protecting against Cross-Site Request Forgery and Cross-Site Script Inclusion attacks by appending an additional modifier to the &lt;code>Set-Cookie&lt;/code> HTTP header.&lt;/p></description></item><item><title>Ensuring secure cookies with URL Rewrite</title><link>https://im5tu.io/article/2017/06/ensuring-secure-cookies-with-url-rewrite/</link><pubDate>Sun, 11 Jun 2017 20:38:07 +0100</pubDate><guid>https://im5tu.io/article/2017/06/ensuring-secure-cookies-with-url-rewrite/</guid><description>&lt;p>In this article, we will take a look at secure cookies, that is by appending an additional modifier to the &lt;code>Set-Cookie&lt;/code> HTTP header.&lt;/p></description></item><item><title>Ensuring httpOnly cookies with URL Rewrite</title><link>https://im5tu.io/article/2017/06/ensuring-httponly-cookies-with-url-rewrite/</link><pubDate>Tue, 06 Jun 2017 15:01:04 +0100</pubDate><guid>https://im5tu.io/article/2017/06/ensuring-httponly-cookies-with-url-rewrite/</guid><description>&lt;p>In this article, I will give a brief overview of cookies, why we want them to be httpOnly and how we can ensure this via URL Rewrite. We will also be creating our first outbound rewrite rule with a pre-condition.&lt;/p></description></item><item><title>Removing trailing slashes with URL Rewrite</title><link>https://im5tu.io/article/2017/06/removing-trailing-slashes-with-url-rewrite/</link><pubDate>Mon, 05 Jun 2017 15:00:59 +0100</pubDate><guid>https://im5tu.io/article/2017/06/removing-trailing-slashes-with-url-rewrite/</guid><description>&lt;p>In the &lt;a href="https://im5tu.io/article/2017/06/canonical-host-urls-with-url-rewrite/">previous post&lt;/a>, I explained why canonical urls are important and how to enforce them . In this article, I will show you how to have a canonical host url.&lt;/p></description></item><item><title>Canonical host urls with URL Rewrite</title><link>https://im5tu.io/article/2017/06/canonical-host-urls-with-url-rewrite/</link><pubDate>Sun, 04 Jun 2017 15:00:55 +0100</pubDate><guid>https://im5tu.io/article/2017/06/canonical-host-urls-with-url-rewrite/</guid><description>In the previous post, I gave a brief intoduction to URL Rewriting and showed you how to get from HTTP to HTTPS. In this article, I will show you how to have a canonical host url.
What is a canonical host url? It can be incredibly easy to distribute different urls for your website. Lets say that we have www.site.com/post1 and site.com/post1. If you&amp;rsquo;re a search engine, you think that these are different different pages with the same content.</description></item><item><title>Up and running with URL Rewrite - going from HTTP to HTTPS</title><link>https://im5tu.io/article/2017/06/up-and-running-with-url-rewrite-going-from-http-to-https/</link><pubDate>Sat, 03 Jun 2017 15:00:51 +0100</pubDate><guid>https://im5tu.io/article/2017/06/up-and-running-with-url-rewrite-going-from-http-to-https/</guid><description>&lt;p>In this series, I am going to take you through a few &lt;code>web.config&lt;/code> snippets that have come in handy for me when using URL Rewrite on IIS. Firstly, I am going to introduce the URL Rewrite module then show a sample of going from HTTP to HTTPS.&lt;/p></description></item><item><title>DevOps</title><link>https://im5tu.io/article/2015/01/devops/</link><pubDate>Sat, 24 Jan 2015 18:36:29 +0000</pubDate><guid>https://im5tu.io/article/2015/01/devops/</guid><description>&lt;p>As part of my role as a .Net Developer, I have recently been getting to grips with the build and deployment features of both Teamcity and Octopus Deploy. This has been making me think about the industry buzz word &amp;ldquo;DevOps&amp;rdquo; and exactly what that means.&lt;/p></description></item></channel></rss>