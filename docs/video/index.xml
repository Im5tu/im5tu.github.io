<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Videos on CodeWithStu's Blog</title><link>https://im5tu.io/video/</link><description>Recent content in Videos on CodeWithStu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://im5tu.io/video/index.xml" rel="self" type="application/rss+xml"/><item><title>The Smartest Way to Onboard Developers</title><link>https://im5tu.io/video/the-smartest-way-to-onboard-developers/</link><pubDate>Mon, 01 Jan 2024 16:00:00 +0000</pubDate><guid>https://im5tu.io/video/the-smartest-way-to-onboard-developers/</guid><description>&lt;p>Change happens. People will leave your team and people join your team. But what if there was an easy way to get new people up to speed in minutes, not weeks. Imagine clippy could hold your hand through a code base which you can easily refer back to at any time. The best bit? Anyone can do this.&lt;/p></description></item><item><title>2 MUST USE features for dotnet test debugging</title><link>https://im5tu.io/video/2-must-use-features-for-dotnet-test-debugging/</link><pubDate>Mon, 08 May 2023 12:08:26 +0100</pubDate><guid>https://im5tu.io/video/2-must-use-features-for-dotnet-test-debugging/</guid><description>&lt;p>In this video, Stu demonstrates how to use the dotnet test feature to debug two types of test failures: test crashes and test hangs. Stu shows how to use the &amp;ldquo;blame-crash&amp;rdquo; parameter to generate sequence and memory dump files to help diagnose test crashes, and the &amp;ldquo;blame-hang&amp;rdquo; parameter to collect hang dumps when tests exceed the given timeout. He also shares how to set these parameters as csproj properties to achieve consistent debugging behavior. By the end of this video, viewers will have a valuable tool to help them save time when debugging test failures.&lt;/p></description></item><item><title>Saying Hello To The Newest .NET Community - WeAreDotnet!</title><link>https://im5tu.io/video/saying-hello-to-the-newest-net-community-wearedotnet/</link><pubDate>Thu, 27 Apr 2023 08:54:06 +0100</pubDate><guid>https://im5tu.io/video/saying-hello-to-the-newest-net-community-wearedotnet/</guid><description>&lt;p>In this first interview of a series, we&amp;rsquo;re meeting the founders of WeAreDotnet, a new .NET community. Tim shares his motivations for starting a new community with Matthias &amp;amp; Gerald and their plans for its future. We dive into what sets WeAreDotnet apart from other .NET communities, how they aim to help developers grow their skills, and the kind of events and resources they offer. Join us as we get to know this exciting new addition to the .NET community landscape!&lt;/p></description></item><item><title>Unlocking the best of AWS Route 53</title><link>https://im5tu.io/video/unlocking-the-best-of-aws-route-53/</link><pubDate>Sun, 26 Feb 2023 07:47:00 +0000</pubDate><guid>https://im5tu.io/video/unlocking-the-best-of-aws-route-53/</guid><description>&lt;p>In this video, I will show you the power of wildcards, health checks, and, my favourite, a Netflix-style multi-region DNS setup for scenarios on AWS Route 53. You&amp;rsquo;ll learn about the many capabilities of this service and how to use it to your advantage. Each section is accompanied by Terraform code. This video was originally was posted under DevOpsWithStu, but since then I have merged the channels together.&lt;/p></description></item><item><title>How to Use AWS IAM Identity Centre with Terraform</title><link>https://im5tu.io/video/how-to-use-aws-iam-identity-centre-with-terraform/</link><pubDate>Sun, 26 Feb 2023 07:46:01 +0000</pubDate><guid>https://im5tu.io/video/how-to-use-aws-iam-identity-centre-with-terraform/</guid><description>&lt;p>This video will look at how to log in with AWS IAM Identity Centre and what to do when Terraform doesn&amp;rsquo;t work out of the box! Learn some of the inner mechanics behind AWS SSO Login. This video was originally was posted under DevOpsWithStu, but since then I have merged the channels together.&lt;/p></description></item><item><title>Create Terraform Modules Like A Pro</title><link>https://im5tu.io/video/create-terraform-modules-like-a-pro/</link><pubDate>Sun, 26 Feb 2023 07:45:00 +0000</pubDate><guid>https://im5tu.io/video/create-terraform-modules-like-a-pro/</guid><description>&lt;p>In this video, we&amp;rsquo;ll look at a technique you can use to upgrade your Terraform modules. Over the course of the last 4/5 years, I&amp;rsquo;ve noticed that there is always a trend within companies to build modules for specific things/use cases. Rarely do I see these teams account for the one thing they need to operate the infrastructure they make. This video was originally was posted under DevOpsWithStu, but since then I have merged the channels together.&lt;/p></description></item><item><title>The Way You Publish Apps Is Changing | .NET 7</title><link>https://im5tu.io/video/the-way-you-publish-apps-is-changing-net-7/</link><pubDate>Tue, 15 Nov 2022 13:00:00 +0000</pubDate><guid>https://im5tu.io/video/the-way-you-publish-apps-is-changing-net-7/</guid><description>&lt;p>Go from zero to docker image in 30 seconds! In this video, we&amp;rsquo;re going to discuss the changes that are happening with publishing apps in .NET 7. I&amp;rsquo;ll show you how to make the changes backwards compatible with .NET 6 and how to customize your experience.&lt;/p></description></item><item><title>AWS Timestream &amp; .NET - Underrated?</title><link>https://im5tu.io/video/aws-timestream-net-underrated/</link><pubDate>Fri, 21 Oct 2022 06:45:00 +0100</pubDate><guid>https://im5tu.io/video/aws-timestream-net-underrated/</guid><description>&lt;p>Let&amp;rsquo;s look at how to use AWS Timestream in .NET. Timestream is a managed time series database from AWS. Itâ€™s fast and scalable, with advanced features like scheduled queries.&lt;/p></description></item><item><title>Mocking APIs Made Easy with Mockaco</title><link>https://im5tu.io/video/mocking-apis-made-easy-with-mockaco/</link><pubDate>Fri, 07 Oct 2022 07:00:14 +0100</pubDate><guid>https://im5tu.io/video/mocking-apis-made-easy-with-mockaco/</guid><description>&lt;p>Mockaco is an HTTP-based dotnet API mocking server with fast setup - great for when you need to setup a mock API to test locally. As Mockaco is also a docker image, we can utilize this in our build pipelines to get some confidence in our tests without requiring external dependencies.&lt;/p></description></item><item><title>Testing like a PRO with XUnit &amp; Localstack - .NET 7</title><link>https://im5tu.io/video/testing-like-a-pro-with-xunit-localstack-net-7/</link><pubDate>Wed, 21 Sep 2022 13:15:00 +0100</pubDate><guid>https://im5tu.io/video/testing-like-a-pro-with-xunit-localstack-net-7/</guid><description>&lt;p>If you&amp;rsquo;re relying on your CI pipeline to start up your docker containers, or not seeding your data in localstack before your tests start then this video is for you. Learn how to spin up a localstack aws instance correctly with xunit and never worry about doing anything else other than start docker &amp;amp; dotnet test.&lt;/p></description></item><item><title>How To Version ASP.NET Core MVC &amp; Minimal APIs</title><link>https://im5tu.io/video/how-to-version-asp-net-core-mvc-minimal-apis/</link><pubDate>Tue, 13 Sep 2022 05:45:01 +0100</pubDate><guid>https://im5tu.io/video/how-to-version-asp-net-core-mvc-minimal-apis/</guid><description>&lt;p>Versioning API&amp;rsquo;s can be extremely important for your product. Learn 4 different ways to version your APIs in .NET minimal APIs and .NET MVC APIs. The techniques you&amp;rsquo;ll learn are: content type negotiation versioning, custom headers versioning, query string versioning and URL versioning.&lt;/p></description></item><item><title>New .NET 7 Feature - Regex Source Generator #shorts</title><link>https://im5tu.io/video/new-net-7-feature-regex-source-generator-shorts/</link><pubDate>Wed, 07 Sep 2022 22:10:00 +0100</pubDate><guid>https://im5tu.io/video/new-net-7-feature-regex-source-generator-shorts/</guid><description>&lt;p>Take a quick look at the new .NET 7 source generator for Regex. Check out the full video here: &lt;a href="https://www.youtube.com/watch?v=6USQ3_81wQM">https://www.youtube.com/watch?v=6USQ3_81wQM&lt;/a>&lt;/p></description></item><item><title>Live: Serverless SaaS</title><link>https://im5tu.io/video/live-serverless-saas/</link><pubDate>Thu, 01 Sep 2022 09:44:15 +0100</pubDate><guid>https://im5tu.io/video/live-serverless-saas/</guid><description>&lt;p>In this session, I&amp;rsquo;m going to build out a design for a serverless SaaS solution on AWS. This takes into account things like budgetting and technology choices. The aim will be to to deploy a regionally independent solution.&lt;/p></description></item><item><title>The fastest .NET Serializer is NOT what you think</title><link>https://im5tu.io/video/the-fastest-net-serializer-is-not-what-you-think/</link><pubDate>Sun, 28 Aug 2022 05:45:02 +0100</pubDate><guid>https://im5tu.io/video/the-fastest-net-serializer-is-not-what-you-think/</guid><description>&lt;p>Recently, I needed to compare the current performance of .NET serializers for a project. In this video, I compare the current state of the serializers and produce some interesting results.&lt;/p>
&lt;p>Link to the benchmarks repository: &lt;a href="https://github.com/Im5tu/SerializationBenchmarks">https://github.com/Im5tu/SerializationBenchmarks&lt;/a>&lt;/p>
&lt;p>Json Serializers&lt;/p>
&lt;hr>
&lt;ul>
&lt;li>Jil: &lt;a href="https://www.nuget.org/packages/Jil/">https://www.nuget.org/packages/Jil/&lt;/a>&lt;/li>
&lt;li>Newtonsoft.Json: &lt;a href="https://www.nuget.org/packages/Newtonsoft.Json">https://www.nuget.org/packages/Newtonsoft.Json&lt;/a>&lt;/li>
&lt;li>ServiceStack.Text: &lt;a href="https://www.nuget.org/packages/ServiceStack.Text">https://www.nuget.org/packages/ServiceStack.Text&lt;/a>&lt;/li>
&lt;li>SpanJson: &lt;a href="https://www.nuget.org/packages/SpanJson">https://www.nuget.org/packages/SpanJson&lt;/a>&lt;/li>
&lt;li>UTF8Json: &lt;a href="https://www.nuget.org/packages/Utf8Json">https://www.nuget.org/packages/Utf8Json&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Binary Serializers&lt;/p>
&lt;hr>
&lt;ul>
&lt;li>AvroConvert: &lt;a href="https://www.nuget.org/packages/AvroConvert">https://www.nuget.org/packages/AvroConvert&lt;/a>&lt;/li>
&lt;li>Bebop: &lt;a href="https://www.nuget.org/packages/bebop">https://www.nuget.org/packages/bebop&lt;/a>&lt;/li>
&lt;li>BSON: &lt;a href="https://www.nuget.org/packages/MongoDB.Bson">https://www.nuget.org/packages/MongoDB.Bson&lt;/a>&lt;/li>
&lt;li>GroBuf: &lt;a href="https://www.nuget.org/packages/GroBuf">https://www.nuget.org/packages/GroBuf&lt;/a>&lt;/li>
&lt;li>Hyperion: &lt;a href="https://www.nuget.org/packages/Hyperion">https://www.nuget.org/packages/Hyperion&lt;/a>&lt;/li>
&lt;li>MessagePack: &lt;a href="https://www.nuget.org/packages/MessagePack">https://www.nuget.org/packages/MessagePack&lt;/a>&lt;/li>
&lt;li>MsgPack: &lt;a href="https://www.nuget.org/packages/MsgPack.Cli">https://www.nuget.org/packages/MsgPack.Cli&lt;/a>&lt;/li>
&lt;li>protobuf-net: &lt;a href="https://www.nuget.org/packages/protobuf-net">https://www.nuget.org/packages/protobuf-net&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>.NET 7 - Pattern Matching With Spans #shorts</title><link>https://im5tu.io/video/net-7-pattern-matching-with-spans-shorts/</link><pubDate>Thu, 25 Aug 2022 17:45:01 +0100</pubDate><guid>https://im5tu.io/video/net-7-pattern-matching-with-spans-shorts/</guid><description>&lt;p>With .NET 7 just around the corner, we have a better idea of the features that are going to in it. Letâ€™s take a look at 10 features you can use today: &lt;a href="https://www.youtube.com/watch?v=6USQ3_81wQM">https://www.youtube.com/watch?v=6USQ3_81wQM&lt;/a>&lt;/p></description></item><item><title>.NET 7 - PatchAsync &amp; PatchAsJsonAsync #shorts</title><link>https://im5tu.io/video/net-7-patchasync-patchasjsonasync-shorts/</link><pubDate>Tue, 23 Aug 2022 06:15:02 +0100</pubDate><guid>https://im5tu.io/video/net-7-patchasync-patchasjsonasync-shorts/</guid><description>&lt;p>With .NET 7 just around the corner, we have a better idea of the features that are going to in it. Letâ€™s take a look at 10 features you can use today: &lt;a href="https://www.youtube.com/watch?v=6USQ3_81wQM">https://www.youtube.com/watch?v=6USQ3_81wQM&lt;/a>&lt;/p></description></item><item><title>.NET 7: 10 New Features You Need to Know</title><link>https://im5tu.io/video/net-7-10-new-features-you-need-to-know/</link><pubDate>Sun, 21 Aug 2022 20:00:02 +0100</pubDate><guid>https://im5tu.io/video/net-7-10-new-features-you-need-to-know/</guid><description>&lt;p>With .NET 7 just around the corner, we have a better idea of the features that are going to in it. Letâ€™s take a look at 10 features you can use today. Links to all of the features can be found below.&lt;/p></description></item><item><title>Using PASETO in .NET - #shorts</title><link>https://im5tu.io/video/using-paseto-in-net-shorts/</link><pubDate>Thu, 18 Aug 2022 22:44:48 +0100</pubDate><guid>https://im5tu.io/video/using-paseto-in-net-shorts/</guid><description>&lt;p>For the full video, go here: &lt;a href="https://www.youtube.com/watch?v=oNQdDjvS_54">https://www.youtube.com/watch?v=oNQdDjvS_54&lt;/a>&lt;/p>
&lt;p>Creating a restricted file download with S3 is easy with pre-signed URLs. But what your endpoint isn&amp;rsquo;t a file? Or you&amp;rsquo;re not sourcing it from S3? In this video, we take a look at an upcoming technology called PASETO (platform agnostic security token) and see how to create an endpoint that is restricted by time.&lt;/p></description></item><item><title>Live AWS System Design: Payments Gateway</title><link>https://im5tu.io/video/live-aws-system-design-payments-gateway/</link><pubDate>Thu, 18 Aug 2022 10:08:30 +0100</pubDate><guid>https://im5tu.io/video/live-aws-system-design-payments-gateway/</guid><description>&lt;p>In this session, we are going to design a typically Payments Gateway that you would be expected to design as part of the hiring process for a FinTech. We will about some of the considerations to take into account when facing this question in a systems design interview.&lt;/p></description></item><item><title>A New Way to Create Time Restricted Endpoints in .NET</title><link>https://im5tu.io/video/a-new-way-to-create-time-restricted-endpoints-in-net/</link><pubDate>Mon, 15 Aug 2022 06:00:23 +0100</pubDate><guid>https://im5tu.io/video/a-new-way-to-create-time-restricted-endpoints-in-net/</guid><description>&lt;p>Creating a restricted file download with S3 is easy with pre-signed URLs. But what your endpoint isn&amp;rsquo;t a file? Or you&amp;rsquo;re not sourcing it from S3? In this video, we take a look at an upcoming technology called PASETO (platform agnostic security token) and see how to create an endpoint that is restricted by time.&lt;/p></description></item><item><title>Live: AWS Multi-Account Structure Design</title><link>https://im5tu.io/video/live-aws-multi-account-structure-design/</link><pubDate>Thu, 11 Aug 2022 09:20:59 +0100</pubDate><guid>https://im5tu.io/video/live-aws-multi-account-structure-design/</guid><description>&lt;p>In this session, we are going to design an AWS Multi-Account structure and the networking behind it. We will learn how to connect different accounts together and some of the considerations to take into account when facing this question in a systems design interview.&lt;/p></description></item><item><title>Live: Systems Design - Stock Tick API</title><link>https://im5tu.io/video/live-systems-design-stock-tick-api/</link><pubDate>Thu, 04 Aug 2022 09:36:49 +0100</pubDate><guid>https://im5tu.io/video/live-systems-design-stock-tick-api/</guid><description>&lt;p>In this session, we are going to design a fairly typical stock trading API. We are going to go through some of the considerations that you need to have as well as looking at some of the curve balls that you may face. This will help you design distributed systems and data intensive applications using an event driven architecture.&lt;/p></description></item><item><title>.NET 7 Reflection Improvements Can't Beat THIS</title><link>https://im5tu.io/video/net-7-reflection-improvements-can-t-beat-this/</link><pubDate>Mon, 01 Aug 2022 00:08:03 +0100</pubDate><guid>https://im5tu.io/video/net-7-reflection-improvements-can-t-beat-this/</guid><description>&lt;p>Inspired by a blog post and video from two of .NET&amp;rsquo;s biggest content creators, I decided to take a look an old trick I knew to see how it compared to the performance improvements in .NET 7 using .NET 6 as a comparison. Stay until the end for something really mind bending!&lt;/p></description></item><item><title>How to set up OpenTelemetry Collector on Kubernetes</title><link>https://im5tu.io/video/how-to-set-up-opentelemetry-collector-on-kubernetes/</link><pubDate>Tue, 26 Jul 2022 12:00:07 +0100</pubDate><guid>https://im5tu.io/video/how-to-set-up-opentelemetry-collector-on-kubernetes/</guid><description>&lt;p>OpenTelemetry loves Kubernetes, which is clear to see from the OpenTelemetry Operator for Kubernetes. In this video, you will learn:&lt;/p>
&lt;ul>
&lt;li>How to install the OpenTelemetry Operator&lt;/li>
&lt;li>How to automatically inject a sidecar into a pod&lt;/li>
&lt;li>How to create a new collector configuration&lt;/li>
&lt;li>How to add automatic instrumentation for supported languages&lt;/li>
&lt;/ul></description></item><item><title>Running an OpenTelemetry Collector locally with Docker</title><link>https://im5tu.io/video/running-an-opentelemetry-collector-locally-with-docker/</link><pubDate>Tue, 19 Jul 2022 17:00:15 +0100</pubDate><guid>https://im5tu.io/video/running-an-opentelemetry-collector-locally-with-docker/</guid><description>&lt;p>Recently weâ€™ve looked into adding logs, metrics &amp;amp; traces using console exporters. In reality, we want to send this telemetry to one or more places. Collectors allow your service to offload data quickly, standardise access to protected exporter endpoints and can take care of additional handling like retries and batching.&lt;/p>
&lt;p>In this video, you will learn:&lt;/p>
&lt;ul>
&lt;li>The difference between the standard collector and the contributors collector&lt;/li>
&lt;li>How to run an OpenTelemetry Collector using docker compose&lt;/li>
&lt;li>How to configure an OpenTelemetry Collector&lt;/li>
&lt;/ul></description></item><item><title>Metrics in .NET has never been easier - OpenTelemetry</title><link>https://im5tu.io/video/metrics-in-net-has-never-been-easier-opentelemetry/</link><pubDate>Tue, 12 Jul 2022 17:00:09 +0100</pubDate><guid>https://im5tu.io/video/metrics-in-net-has-never-been-easier-opentelemetry/</guid><description>&lt;p>Metrics are often handled via one of many protocols. The new contender to this is OpenTelemetry - a system for sending your logs, traces and metrics. This OpenTelemetry tutorial will guide you through how to setup a .NET Application to export your .NET metrics and do basic processing. Youâ€™re going to learn the following:&lt;/p>
&lt;ul>
&lt;li>How to edit and drop metrics&lt;/li>
&lt;li>How to setup application metrics with OpenTelemetry using the console exporter&lt;/li>
&lt;li>How to add external instrumentation like runtime metrics&lt;/li>
&lt;/ul></description></item><item><title>How to Setup OpenTelemetry Logging in .NET</title><link>https://im5tu.io/video/how-to-setup-opentelemetry-logging-in-net/</link><pubDate>Fri, 08 Jul 2022 17:45:03 +0100</pubDate><guid>https://im5tu.io/video/how-to-setup-opentelemetry-logging-in-net/</guid><description>&lt;p>Youâ€™ve discovered that OpenTelemetry can send logs as well as traces but youâ€™re not sure how set this up? This OpenTelemetry tutorial will guide you through how to setup a .NET Application to include log exports and do basic processing. All your logs and traces will be linked automatically.&lt;/p></description></item><item><title>How to Use NuGet Packages in Source Generators</title><link>https://im5tu.io/video/how-to-use-nuget-packages-in-source-generators/</link><pubDate>Tue, 05 Jul 2022 11:30:20 +0100</pubDate><guid>https://im5tu.io/video/how-to-use-nuget-packages-in-source-generators/</guid><description>&lt;p>Learn two slightly different approaches to using NuGet Packages as part of the C# Source Generators youâ€™re building. You may want to do this to parse a configuration file from a YAML based format. Now, you could either write the YAML parser yourself, or like most others, I would prefer to use a pre-built and tested NuGet package.&lt;/p></description></item><item><title>Possibly The Quickest Package Versioning on .NET? #shorts</title><link>https://im5tu.io/video/possibly-the-quickest-package-versioning-on-net-shorts/</link><pubDate>Sun, 03 Jul 2022 22:31:18 +0100</pubDate><guid>https://im5tu.io/video/possibly-the-quickest-package-versioning-on-net-shorts/</guid><description>&lt;p>Learn possibly the quickest way to version a .NET NuGet package or Application with minimal fuss by using MinVer. Source code available to all of my sponsors in the link below.&lt;/p></description></item><item><title>Push Code To A Different Repo With Github Actions #shorts</title><link>https://im5tu.io/video/push-code-to-a-different-repo-with-github-actions-shorts/</link><pubDate>Sun, 03 Jul 2022 17:45:00 +0100</pubDate><guid>https://im5tu.io/video/push-code-to-a-different-repo-with-github-actions-shorts/</guid><description>&lt;p>This Github Actions tutorial will show you how to commit files to a different Github repository inside a Github Workflow. Source code available to all of my sponsors on the link below.&lt;/p></description></item><item><title>How to use Git to Save your .NET Source Generator Output Files</title><link>https://im5tu.io/video/how-to-use-git-to-save-your-net-source-generator-output-files/</link><pubDate>Thu, 30 Jun 2022 17:00:19 +0100</pubDate><guid>https://im5tu.io/video/how-to-use-git-to-save-your-net-source-generator-output-files/</guid><description>&lt;p>Ever wanted to see the files generated by .NET Source Generators? Ever wondered what the effect of your changes to your generators are? Well this is the video for you. See how you can output the generated files and potentially save them in Git.&lt;/p>
&lt;p>Warning: if you generate thousands of generated files and don&amp;rsquo;t tell you co-workers first, they might be annoyed&amp;hellip;. :D&lt;/p></description></item><item><title>Github Issue Templates: A Look at the New Issue Templates</title><link>https://im5tu.io/video/github-issue-templates-a-look-at-the-new-issue-templates/</link><pubDate>Tue, 28 Jun 2022 13:30:22 +0100</pubDate><guid>https://im5tu.io/video/github-issue-templates-a-look-at-the-new-issue-templates/</guid><description>&lt;p>In this video - we take a look at how I&amp;rsquo;ve setup my personal project to use the new issue templates which are currently in beta at the time of recording (2022-06-21).&lt;/p></description></item><item><title>Publish Release Assets With The Github CLI #shorts</title><link>https://im5tu.io/video/publish-release-assets-with-the-github-cli-shorts/</link><pubDate>Fri, 24 Jun 2022 09:30:06 +0100</pubDate><guid>https://im5tu.io/video/publish-release-assets-with-the-github-cli-shorts/</guid><description>&lt;p>Learn how to publish an artifact to a Github Release quickly and easily using the Github CLI on Github Actions. Source code available to all of my sponsors.&lt;/p></description></item><item><title>How to make your csproj settings available via NuGet</title><link>https://im5tu.io/video/how-to-make-your-csproj-settings-available-via-nuget/</link><pubDate>Tue, 21 Jun 2022 21:30:02 +0100</pubDate><guid>https://im5tu.io/video/how-to-make-your-csproj-settings-available-via-nuget/</guid><description>&lt;p>Want to know how to set your global usings across all your packages simply by using a .NET NuGet package? Then this is the video for you. I&amp;rsquo;ll show you how to setup your NuGet package and which properties and files to create for all the magic to happen.&lt;/p></description></item><item><title>3 Ways to Increase the Reliability of Your Applications with Polly</title><link>https://im5tu.io/video/3-ways-to-increase-the-reliability-of-your-applications-with-polly/</link><pubDate>Thu, 03 Feb 2022 09:42:29 +0000</pubDate><guid>https://im5tu.io/video/3-ways-to-increase-the-reliability-of-your-applications-with-polly/</guid><description>&lt;p>In this video, we&amp;rsquo;re going to talk about how to increase the reliability of your applications using Polly. Polly is a software that allows you to monitor the reliability of your applications and make improvements as needed. By using Polly, you&amp;rsquo;ll be able to identify and fix reliability issues early, saving you time and money in the long run. This video will teach you how to use Polly to increase the reliability of your applications, so be sure to watch it!&lt;/p></description></item><item><title>Extending the AWS SDK for .NET</title><link>https://im5tu.io/video/extending-the-aws-sdk-for-net/</link><pubDate>Sat, 08 Jan 2022 23:07:05 +0000</pubDate><guid>https://im5tu.io/video/extending-the-aws-sdk-for-net/</guid><description>&lt;p>In this video weâ€™re taking a look at how to extend the AWS SDK for .NET, which can be useful for various tasks like adding in some custom observability components into the request pipeline. This article is a companion resource for the video linked above in case you prefer a written version. Iâ€™m actively using the approach described here to implement distributed tracing for all my AWS calls.&lt;/p></description></item><item><title>My 3 Commonly Used Github Actions and their benefits</title><link>https://im5tu.io/video/my-3-commonly-used-github-actions-and-their-benefits/</link><pubDate>Mon, 10 May 2021 09:59:07 +0100</pubDate><guid>https://im5tu.io/video/my-3-commonly-used-github-actions-and-their-benefits/</guid><description>&lt;p>In this Github Actions Tutorial, we take a look at three Github Action Workflows that I use on a regular basis for different projects that I work on, including:&lt;/p>
&lt;ul>
&lt;li>Validation of commit messages (follow on from my previous Githooks video)&lt;/li>
&lt;li>Ensuring that a file is edited inside of a PR, and&lt;/li>
&lt;li>Updating all of my NuGet packages inside of 1 PR (rather than dependabots&amp;rsquo; 20)&lt;/li>
&lt;/ul>
&lt;p>You can use the principals of the workflows shown and customise to your specific use cases to speed up your workflows.&lt;/p></description></item><item><title>Use Git Hooks To Automate Your Workflow</title><link>https://im5tu.io/video/use-git-hooks-to-automate-your-workflow/</link><pubDate>Fri, 26 Mar 2021 08:30:01 +0000</pubDate><guid>https://im5tu.io/video/use-git-hooks-to-automate-your-workflow/</guid><description>&lt;p>Git is a powerful version control system, but often we need to ensure certain patterns and practises are followed. Some of these workflows can be automated with Git Hooks. In this video, we will focus on client side git hooks and I&amp;rsquo;ll show you how to write a quick commit message validation hook.&lt;/p></description></item><item><title>Snitch: The Smart Way to Clean Up Your .NET Dependencies</title><link>https://im5tu.io/video/snitch-the-smart-way-to-clean-up-your-net-dependencies/</link><pubDate>Wed, 17 Feb 2021 21:55:31 +0000</pubDate><guid>https://im5tu.io/video/snitch-the-smart-way-to-clean-up-your-net-dependencies/</guid><description>&lt;p>Transitive dependencies can be problematic when the same package is registered in multiple projects. Learn how to use a tool called Snitch to clean up your .NET project files and prevent future problems.&lt;/p></description></item><item><title>OpenTelemetry: Simple Distributed Tracing in .NET Libraries</title><link>https://im5tu.io/video/opentelemetry-simple-distributed-tracing-in-net-libraries/</link><pubDate>Thu, 11 Feb 2021 07:00:09 +0000</pubDate><guid>https://im5tu.io/video/opentelemetry-simple-distributed-tracing-in-net-libraries/</guid><description>&lt;p>Following on from our introductory video, this OpenTelemetry tutorial walks through how to add custom ActivitySources that can be used in many libraries such as OpenTelemetry to support a distributed tracing scenario, without creating any dependencies. This is incredibly powerful for .NET library authors as they don&amp;rsquo;t have to wait for .NET 5 to take advantage of this amazing capability.&lt;/p></description></item><item><title>Get Started With OpenTelemetry Tracing and ASP.NET Core</title><link>https://im5tu.io/video/get-started-with-opentelemetry-tracing-and-asp-net-core/</link><pubDate>Sun, 07 Feb 2021 14:00:09 +0000</pubDate><guid>https://im5tu.io/video/get-started-with-opentelemetry-tracing-and-asp-net-core/</guid><description>&lt;p>In this OpenTelemetry Tutorial, take a look at how to quickly get up and running with OpenTelemetry in an ASP.NET Core application. You&amp;rsquo;ll learn how to setup the automatic instrumentation for both inbound and outbound web requests and how to configure the Jaeger Exporter (&lt;a href="https://jaegertracing.io">https://jaegertracing.io&lt;/a>) - running it all in a local environment.&lt;/p>
&lt;p>For more information about the differences between OpenTelemetry and what is available in .NET out of the box, also checkout this article by Rehan Saeed: &lt;a href="https://rehansaeed.com/deep-dive-into-open-telemetry-for-net/">https://rehansaeed.com/deep-dive-into-open-telemetry-for-net/&lt;/a>&lt;/p></description></item><item><title>AWS Architecture Design - Global Lifts Scenario</title><link>https://im5tu.io/video/aws-architecture-design-global-lifts-scenario/</link><pubDate>Thu, 04 Feb 2021 18:30:09 +0000</pubDate><guid>https://im5tu.io/video/aws-architecture-design-global-lifts-scenario/</guid><description>&lt;p>Ever wondered how to answer the architecture design questions in interviews? If so, this video is for you. I take a sample of what I often receive as an architecture test and walk through how I would design the architecture on AWS explaining each design decision on the way - often with notes about the technology capabilities along the way. We will also go through some common questions that are often thrown in as curve balls during the process - including how to prevent them through efficient design.&lt;/p>
&lt;p>Nothing in this video is scripted or prepared in anyway, just the scenario, the camera (which died) and my thoughts. Please do your own research on the techniques presented here before you implement them in your architectures to make sure you have a real understanding of how it all works.&lt;/p>
&lt;p>If you like this video and want to see more like this, or have a scenario you would like me to cover, please let me know in the comments below and we can explore new scenarios together :)&lt;/p></description></item><item><title>Building Better NuGet Packages</title><link>https://im5tu.io/video/building-better-nuget-packages/</link><pubDate>Mon, 01 Feb 2021 08:30:01 +0000</pubDate><guid>https://im5tu.io/video/building-better-nuget-packages/</guid><description>&lt;p>In this NuGet tutorial, learn how to set common package tags in your csproj, enable deterministic builds, enable SourceLink for your packages and validate them using dotnet validate and NuGet Package Explorer.&lt;/p></description></item><item><title>Stateless Workers in Microsoft Orleans</title><link>https://im5tu.io/video/stateless-workers-in-microsoft-orleans/</link><pubDate>Tue, 26 Jan 2021 08:30:01 +0000</pubDate><guid>https://im5tu.io/video/stateless-workers-in-microsoft-orleans/</guid><description>&lt;p>Learn about the use cases for stateless workers in Microsoft Orleans, and how to use them. This video is part of the Running Microsoft Orleans in AWS series. If you missed the introduction, or want to watch more in the series, see the playlist here: &lt;a href="https://bit.ly/orleans-code-with-stu">https://bit.ly/orleans-code-with-stu&lt;/a>&lt;/p></description></item><item><title>5 Ways To Improve Your .NET Builds</title><link>https://im5tu.io/video/5-ways-to-improve-your-net-builds/</link><pubDate>Mon, 18 Jan 2021 07:30:01 +0000</pubDate><guid>https://im5tu.io/video/5-ways-to-improve-your-net-builds/</guid><description>&lt;p>Ever wish that you could share your .NET project properties across multiple projects? Or debug that funky build? In this video, you&amp;rsquo;ll learn at least 5 different tips and tricks to hack and improve your .NET builds by leveraging some cool features that MsBuild has to offer.&lt;/p></description></item><item><title>Timers &amp; Reminders backed by DynamoDB in Microsoft Orleans</title><link>https://im5tu.io/video/timers-reminders-backed-by-dynamodb-in-microsoft-orleans/</link><pubDate>Wed, 13 Jan 2021 19:00:04 +0000</pubDate><guid>https://im5tu.io/video/timers-reminders-backed-by-dynamodb-in-microsoft-orleans/</guid><description>&lt;p>Following on from the previous video, you&amp;rsquo;ll learn how the difference between timers and reminders in Microsoft Orleans, and how to implement each one. This video is part of the Running Microsoft Orleans in AWS series. If you missed the introduction, or want to watch more in the series, see the playlist here: &lt;a href="https://bit.ly/orleans-code-with-stu">https://bit.ly/orleans-code-with-stu&lt;/a>&lt;/p></description></item><item><title>Call Filters in Microsoft Orleans</title><link>https://im5tu.io/video/call-filters-in-microsoft-orleans/</link><pubDate>Mon, 11 Jan 2021 01:22:03 +0000</pubDate><guid>https://im5tu.io/video/call-filters-in-microsoft-orleans/</guid><description>&lt;p>Following on from the previous video, you&amp;rsquo;ll learn how to implement a basic incoming and outgoing call filter in Microsoft Orleans. This video is part of the Running Microsoft Orleans in AWS series. If you missed the introduction, or want to watch more in the series, see the playlist here: &lt;a href="https://bit.ly/orleans-code-with-stu">https://bit.ly/orleans-code-with-stu&lt;/a>&lt;/p></description></item><item><title>Clustering Microsoft Orleans with DynamoDB</title><link>https://im5tu.io/video/clustering-microsoft-orleans-with-dynamodb/</link><pubDate>Sun, 06 Dec 2020 20:53:50 +0000</pubDate><guid>https://im5tu.io/video/clustering-microsoft-orleans-with-dynamodb/</guid><description>&lt;p>Following on from the previous video, you&amp;rsquo;ll learn how to setup clustering with DynamoDB as the backend. This video is part of the Running Microsoft Orleans in AWS series. If you missed the introduction, or want to watch more in the series, see the playlist here: &lt;a href="https://bit.ly/orleans-code-with-stu">https://bit.ly/orleans-code-with-stu&lt;/a>&lt;/p></description></item><item><title>Persisting Microsoft Orleans Grain State With DynamoDB</title><link>https://im5tu.io/video/persisting-microsoft-orleans-grain-state-with-dynamodb/</link><pubDate>Sun, 29 Nov 2020 01:18:54 +0000</pubDate><guid>https://im5tu.io/video/persisting-microsoft-orleans-grain-state-with-dynamodb/</guid><description>&lt;p>Following on from the previous video, you&amp;rsquo;ll learn how to setup grain persistence with DynamoDB local. This video is part of the Running Microsoft Orleans in AWS series. If you missed the introduction, or want to watch more in the series, see the playlist here: &lt;a href="https://bit.ly/orleans-code-with-stu">https://bit.ly/orleans-code-with-stu&lt;/a>&lt;/p></description></item><item><title>Introduction to Microsoft Orleans</title><link>https://im5tu.io/video/introduction-to-microsoft-orleans/</link><pubDate>Sun, 22 Nov 2020 21:05:26 +0000</pubDate><guid>https://im5tu.io/video/introduction-to-microsoft-orleans/</guid><description>&lt;p>In this video, I&amp;rsquo;m going to take you through an Introduction to the Microsoft Orleans actor framework. You&amp;rsquo;ll learn:&lt;/p>
&lt;ul>
&lt;li>What is the virtual actor model?&lt;/li>
&lt;li>What is a grain?&lt;/li>
&lt;li>What is a silo?&lt;/li>
&lt;li>How this works in conjunction with AspNetCore using the Generic Hosting Model&lt;/li>
&lt;/ul></description></item></channel></rss>